/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package downloader;

import config.DownloaderConfig;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import model.SelectedMangaOption;
import org.json.JSONException;
import javax.swing.JOptionPane;

/**
 *
 * @author soeltan_z
 */
public final class Option extends javax.swing.JFrame {
   private static DownloaderConfig config;
   private ArrayList<SelectedMangaOption > mangaList; 
    /**
     * Creates new form Option
     */
    public Option(DownloaderConfig Config) {
        config = Config;
        initComponents();
        ArrayList<SelectedMangaOption > manga = config.getSelectedmangaList();
        this.selectedMangaListOption(manga);
        destinationField.setText(config.getPath());
    }
    
    public Option() {
        initComponents();
    }

    public void selectedMangaListOption(ArrayList<SelectedMangaOption > mangaList){
        for(int i = 0 ; i < mangaList.size(); i++){
            SelectedMangaOption mangaSite = mangaList.get(i);
            boolean isSelected = mangaSite.isIsSelected();
            String site = mangaSite.getMangaSite();
            this.setChekBox(isSelected, site);
        }
                      
    }
    
    public void setChekBox (boolean isSelected , String site){
//        if(site.equalsIgnoreCase("Manga Here")){
//           mangaHere.setSelected(isSelected);
//        }
//        if(site.equalsIgnoreCase("Manga Fox")){
//           mangaFox.setSelected(isSelected);
//        }
//        if(site.equalsIgnoreCase("Manga Reader")){
//           mangaReader.setSelected(isSelected);
//        }
//    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        destinationField = new javax.swing.JTextField();
        browseBtn = new javax.swing.JButton();
        svBtnOpt = new javax.swing.JButton();
        cnlBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Setting");

        jLabel1.setText("Destination Path :");

        destinationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinationFieldActionPerformed(evt);
            }
        });

        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(browseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 93, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        svBtnOpt.setText("Save");
        svBtnOpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                svBtnOptActionPerformed(evt);
            }
        });

        cnlBtn.setText("Cancel");
        cnlBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnlBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cnlBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(svBtnOpt)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(svBtnOpt)
                    .addComponent(cnlBtn))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void destinationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destinationFieldActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        String path = config.getPath();
        fileChooser.setCurrentDirectory(new java.io.File(path));
        fileChooser.setDialogTitle("Select Destination Folder");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);    
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
            String newPath = fileChooser.getSelectedFile().toString();
            destinationField.setText(newPath);
          }
        else {
            System.out.println("No Selection ");
          }
       
    }//GEN-LAST:event_browseBtnActionPerformed

    private void svBtnOptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_svBtnOptActionPerformed
       String newPath = destinationField.getText();
//       ArrayList<SelectedMangaOption> selectedMangaOption = getSelectedMangaSiteStatus();
//       ArrayList<String> selectedMangaSiteArray = new ArrayList<String>();
//       for(int i = 0 ; i < selectedMangaOption.size();i++){
//            SelectedMangaOption mangaSite = selectedMangaOption.get(i);
//            boolean isSelected = mangaSite.isIsSelected();
//            if(isSelected){
//                selectedMangaSiteArray.add(mangaSite.getMangaSite());
//            }
//       }
//       
//        //add selected manga site as list of site manga available
//        String [] mangaList = new String [selectedMangaSiteArray.size()];
//            for(int i= 0 ;i < selectedMangaSiteArray.size(); i++){
//                mangaList[i] = selectedMangaSiteArray.get(i).toString();
//        }
//       
//        if(selectedMangaSiteArray.size() < 1 ){
//            JOptionPane.showMessageDialog(new JFrame(), "Please select manga site", "error", JOptionPane.ERROR_MESSAGE);
//        }
//        else {
            config.setPath(newPath);
//            config.setSelectedmangaList(selectedMangaOption);

//            JComboBox<String> listBoxSite = getListBoxSite();
//            listBoxSite.setModel(new javax.swing.DefaultComboBoxModel<>(mangaList));
            try {
                config.saveConfig();
            } catch (JSONException ex) {
                Logger.getLogger(Option.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
//             }
    }//GEN-LAST:event_svBtnOptActionPerformed

    //add code here if add new site
    public ArrayList<SelectedMangaOption > getSelectedMangaSiteStatus (){
        ArrayList<SelectedMangaOption > option = new ArrayList<SelectedMangaOption >();
//        option.add(new SelectedMangaOption(mangaHere.isSelected(),mangaHere.getText()));
//        option.add(new SelectedMangaOption(mangaFox.isSelected(),mangaFox.getText()));
//        option.add(new SelectedMangaOption(mangaReader.isSelected(),mangaReader.getText()));
        return option;
    }
    
    private void cnlBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnlBtnActionPerformed
          this.dispose();
    }//GEN-LAST:event_cnlBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Option.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Option().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.JButton cnlBtn;
    private javax.swing.JTextField destinationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton svBtnOpt;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public JComboBox<String> getListBoxSite() {
//        return mangaListBoxElement;
//    }

}
